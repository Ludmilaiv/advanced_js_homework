(()=>{"use strict";Vue.component("cart",{data:()=>({cartUrl:"/getBasket.json",cartItems:[],imgCart:"img/no-photo.jpg",showCart:!1}),mounted(){this.$parent.getJson("/api/cart").then((t=>{for(let e of t.contents)this.$data.cartItems.push(e)}))},methods:{addProduct(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));if(e)this.$parent.putJson(`/api/cart/${e.id_product}`,{quantity:1}).then((t=>{1===t.result&&e.quantity++}));else{const e=Object.assign({quantity:1},t);this.$parent.postJson("/api/cart",e).then((t=>{1===t.result&&this.cartItems.push(e)}))}},remove(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));e.quantity>1?this.$parent.putJson(`/api/cart/${e.id_product}`,{quantity:-1}).then((t=>{1===t.result&&e.quantity--})):this.$parent.deleteJson(`/api/cart/${e.id_product}`).then((e=>{1===e.result&&this.cartItems.splice(this.cartItems.indexOf(t),1)}))},getCount(){let t=0;return this.cartItems.forEach((e=>{t+=e.quantity})),t},getTotal(){let t=0;return this.cartItems.forEach((e=>{t+=e.price*e.quantity})),t}},template:'<div>\n        <button class="header__link header__link-cart" type="button" @click="showCart = !showCart"><img src="./img/basket.svg" alt="cart">\n            <span class="header__link-cart-count">{{ getCount() }}</span>\n        </button>\n        <section class="shopping-cart" v-show="showCart">\n            <div class="shopping-cart__title-wrp">\n                <h2 class="shopping-cart__title container">shopping cart</h2>\n            </div>\n            <div class="shopping-cart__wrp container">\n                <form class="shopping-cart__form-sales" action="/">\n                    <fieldset>\n                        <legend class="visually-hidden">Sales</legend>\n                        <ul class="shopping-cart__sales">\n                            <cart-item v-for="item of cartItems" :key="item.id_product" :img="item.img ? \'img/\' + item.img : imgCart" :cart-item="item" @remove="remove"></cart-item>\n                        </ul>\n                        <div class="shopping-cart__buttons-wrp">\n                        <button class="shopping-cart__button" type="submit">continue shopping</button>\n                        </div>\n                    </fieldset>\n                </form>\n                <div class="shopping-cart__form-wrp shopping-cart__form-wrp-flex">\n                    <form class="shopping-cart__form-address" action="">\n                        <fieldset>\n                        <legend class="shopping-cart__form-address-title">shipping adress</legend>\n                        <label for="city" class="visually-hidden">city</label>\n                        <input type=text id="city" placeholder="City" value="Bangladesh">\n                        <label for="state" class="visually-hidden">state</label>\n                        <input type=text id="state" placeholder="State">\n                        <label for="postcode" class="visually-hidden">postcode</label>\n                        <input type=text id="postcode" placeholder="Postcode / Zip">\n                        <button class="shopping-cart__form-address-btn" type="submit">get a quote</button>\n                        </fieldset>\n                    </form>\n                    <div class="shopping-cart__checkout" action="/">\n                        <div class="shopping-cart__form-checkout-row">\n                        <span class="shopping-cart__sub-total">sub total</span>\n                        <span class="shopping-cart__sub-total-price">{{ getCount() }}</span>\n                        </div>\n                        <div class="shopping-cart__form-checkout-row">\n                        <span class="shopping-cart__total">sub total</span>\n                        <span class="shopping-cart__total-price">{{ getTotal() }}</span>\n                        </div>\n                        <hr class="shopping-cart__checkout-hr">\n                        <button class="shopping-cart__checkout-btn" type="button">proceed to checkout</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n        </div>\n    '}),Vue.component("cart-item",{props:["img","cartItem"],template:'\n\n    <li class="shopping-cart__sales-item">\n        <img class="shopping-cart__sales-item-img" :src="img" alt="">\n        <div class="shopping-cart__sale-info">\n            <h3 class="shopping-cart__sale-title">{{ cartItem.product_name }}</h3>\n            <ul class="shopping-cart__sale-info-list">\n                <li class="shopping-cart__sale-info-item">Price: <span class="shopping-cart__sale-price">${{ cartItem.price }}</span>\n                </li>\n                <li class="shopping-cart__sale-info-item">Color: Red</li>\n                <li class="shopping-cart__sale-info-item">Size: Xl</li>\n                <li class="shopping-cart__sale-info-item">Quantity: {{ cartItem.quantity }}\n                </li>\n            </ul>\n            <button type="button" class="shopping-cart__del-btn" @click="$emit(\'remove\', cartItem)">&times;</button>\n        </div>\n    </li>\n    '}),Vue.component("error",{data:()=>({text:""}),computed:{isVisible(){return""!==this.text}},template:'\n    <div class="error-block" v-if="isVisible">\n        <p class="error-msg">\n        <button class="close-btn" @click="text=\'\'">&times;</button>\n        {{ text }}\n</p>\n</div>\n    '}),Vue.component("products",{data:()=>({catalogUrl:"/catalogData.json",filtered:[],products:[],imgProduct:"img/no-photo.jpg"}),mounted(){this.$parent.getJson("/api/products").then((t=>{for(let e of t)this.$data.products.push(e),this.$data.filtered.push(e)}))},methods:{filter(t){location.href="#products";let e=new RegExp(t,"i");this.filtered=this.products.filter((t=>e.test(t.product_name)))}},template:'<ul class="products__list">\n                <product v-for="item of filtered" \n                :key="item.id_product" \n                :img="item.img ? \'img/\' + item.img : imgProduct"\n                :product="item"\n                @add-product="$parent.$refs.cart.addProduct"></product>\n            </ul>'}),Vue.component("product",{props:["product","img"],template:'\n        <li class="products__item">\n            <div class="products__item-img-wrp">\n                <img class="products__item-img" :src="img" alt="fetured">\n                <button class="products__item-button" type="button" @click="$emit(\'add-product\', product)">\n                    <img class="products__item-button-img" src="img/basket.svg" alt="cart">\n                    <span>Add to Cart</span>\n                </button>\n            </div>\n            <div class="products__item-wrp">\n                <h3 class="products__item-title">{{product.product_name}}</h3>\n                <p class="products__item-desk">{{product.product_desk}}</p>\n                <p class="products__item-priсe">${{product.price}}</p>\n            </div>\n        </li>\n    '}),Vue.component("filter-el",{data:()=>({userSearch:""}),template:'<form action="#" class="header__search-form" @submit.prevent="$parent.$refs.products.filter(userSearch)">\n                <input type="text" class="header__search-field" v-model="userSearch">\n                <button type="submit" class="header__link header__search">\n                    <img src="./img/loupe.svg" alt="loupe">\n                </button>\n            </form>'}),new Vue({el:"#app",data:{userSearch:""},methods:{getJson(t){return fetch(t).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},postJson(t,e){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},putJson(t,e){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},deleteJson(t,e){return fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))}},mounted(){}})})();